message Message {
    1 -> uint32 methodId;
    2 -> guid messageId;
    3 -> date timestamp;
    4 -> byte[] data;
    5 -> date deadline;
    6 -> byte status;
    7 -> string msg;
    8 -> string authorization;
    9 -> string credential;
    10 -> map[string, string[]] customMetadata;
}

/**
 * `HelloRequest` is a struct representing a request to the Greeter service.
 */
 struct HelloRequest {
    /**
     * The name to be used in the greeting, of type string.
     */
    string name;
}

/**
 * `HelloResponse` is a struct representing the response from the Greeter service.
 */
struct HelloResponse {
    /**
     * The greeting message generated by the service, of type string.
     */
    string serviceMessage;
}

/**
 * `Greeter` is a service that provides a method for generating greeting messages.
 */
service Greeter {
    /**
     * `sayHello` is a method that takes a `HelloRequest` and returns a `HelloResponse`.
     */
    sayHello(HelloRequest): HelloResponse;
    sayHelloClient(stream HelloRequest): HelloResponse;
    sayHelloServer(HelloRequest): stream HelloResponse;
    sayHelloDuplex(stream HelloRequest): stream HelloResponse;
}
